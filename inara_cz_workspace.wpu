#!wing
#!version=7.0
##################################################################
# Wing project file : User-specific branch                       #
##################################################################
[user attributes]
debug.breakpoints = {loc('libs/inara.py'): {231L: (0,
        None,
        1,
        0),
        322L: (0,
               "(k != kk) or (k == 'QTY') or (k == 'Qty')",
               0,
               0),
        331L: (0,
               None,
               1,
               0),
        339L: (0,
               None,
               1,
               0),
        348L: (0,
               None,
               0,
               0),
        368L: (0,
               '(not isinstance(k, str)) or (not isinstance(v, str))',
               0,
               0),
        465L: (0,
               None,
               1,
               0)},
                     loc('main.py'): {87L: (0,
        None,
        1,
        0)}}
debug.err-values = {loc('main.py'): {}}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': '4LuFqN26Wf6XK1CxlBlu9L3mrf'\
        'PmGhCs',
        'size-state': 'maximized',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [0,
                                   0],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.25,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [(5,),
        (5,
         1)],
                                 'selected-nodes': [(5,
        1)],
                                 'top-node': (0,)}},
        'tree-style': 'deep'}}),
                              ('browser',
                               'tall',
                               0,
                               {'all_tree_states': {loc('../../../../../OneDrive/Python36/Projects/code-samples-08-25-2020a.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [None],
        'top-node': None}},
                                'browse_mode': u'Current Module',
                                'follow-selection': False,
                                'sort_mode': 'Alphabetically',
                                'visibility_options': {u'Derived Classes': False,
        u'Imported': False,
        u'Modules': True}}),
                              ('snippets',
                               'tall',
                               0,
                               {}),
                              ('versioncontrol.git',
                               'tall',
                               0,
                               {}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [1,
                          0],
        'notebook_display': 'normal',
        'notebook_percent': 0.30000000000000004,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'Python Files',
                                  'fLocation': u'..\\chrome-gui\\vyperlogix',
                                  'fRecursive': True,
                                  'fType': 'location'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': u'except Exception as',
                                       'fReverse': False,
                                       'fSearchText': u'',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': True,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': u'__rules__',
                                       'fReverse': False,
                                       'fSearchText': u'math.isnan(buymin_price)',
                                       'fStartPos': 0,
                                       'fStyle': 'wildcard',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False}}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('debug-breakpoints',
                      'wide',
                      0,
                      {'tree-state': []}),
                     ('testing',
                      'wide',
                      0,
                      {}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('debug-probe',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'code-line': '',
                       'first-line': 10L,
                       'folded-linenos': [],
                       'history': {u'file:C:/Users/Owner/OneDrive/Python39/inara_cz/main.py': ['r'\
        'ow.get(k, 0.0)\n',
        '_utils.ascii_only(v)\n',
        '_utils.ascii_only(k)\n',
        'buymin_subDataFrame.keys()\n',
        'k\n',
        'row.get(k)\n',
        'type(row.get(k))\n',
        'fOut\n',
        'type(msg)\n',
        'msg.to_string()\n']},
                       'launch-id': None,
                       'sel-line': 26L,
                       'sel-line-start': 1166L,
                       'selection_end': 1166L,
                       'selection_start': 1166L,
                       'zoom': 0L}),
                     ('debug-watch',
                      'wide',
                      1,
                      {}),
                     ('debug-modules',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'code-line': '',
                       'first-line': 0L,
                       'folded-linenos': [],
                       'history': {None: ['float(0.0)\n']},
                       'launch-id': None,
                       'sel-line': 4L,
                       'sel-line-start': 161L,
                       'selection_end': 161L,
                       'selection_start': 161L,
                       'zoom': 0L}),
                     ('bookmarks',
                      'wide',
                      1,
                      {}),
                     ('messages',
                      'wide',
                      2,
                      {'current-domain': 0}),
                     ('os-command',
                      'wide',
                      1,
                      {'last-percent': 0.8,
                       'toolbox-percent': 1.0,
                       'toolbox-tree-sel': ''})],
        'primary_view_state': {'editor_states': ({'bookmarks': ([[loc('libs/inara.py'),
        {'attrib-starts': [('scrape_commodity_data|0|',
                            170)],
         'code-line': "    pandas.set_option('display.max_columns', None)\r"\
                      "\n",
         'first-line': 390L,
         'folded-linenos': [],
         'sel-line': 414L,
         'sel-line-start': 17775L,
         'selection_end': 17825L,
         'selection_start': 17825L,
         'zoom': 0L},
        1602192469.061],
        [loc('libs/inara.py'),
         {'attrib-starts': [('scrape_commodity_data|0|',
                             170)],
          'code-line': "    with open(fpath, 'w') as ffOut:\r\n",
          'first-line': 402L,
          'folded-linenos': [],
          'sel-line': 432L,
          'sel-line-start': 18976L,
          'selection_end': 19010L,
          'selection_start': 19006L,
          'zoom': 0L},
         1602192566.316],
        [loc('libs/inara.py'),
         {'attrib-starts': [('scrape_commodity_data|0|',
                             170)],
          'code-line': "    with open(fpath, 'w') as ffOut:\r\n",
          'first-line': 411L,
          'folded-linenos': [],
          'sel-line': 432L,
          'sel-line-start': 18976L,
          'selection_end': 18990L,
          'selection_start': 18985L,
          'zoom': 0L},
         1602192593.669],
        [loc('libs/inara.py'),
         {'attrib-starts': [('scrape_commodity_data|0|',
                             170)],
          'code-line': '                ffOut.flush()\r\n',
          'first-line': 411L,
          'folded-linenos': [],
          'sel-line': 456L,
          'sel-line-start': 20728L,
          'selection_end': 20745L,
          'selection_start': 20745L,
          'zoom': 0L},
         1602192984.869],
        [loc('main.py'),
         {'attrib-starts': [],
          'code-line': '            for item in items:\r\n',
          'first-line': 46L,
          'folded-linenos': [],
          'sel-line': 75L,
          'sel-line-start': 2915L,
          'selection_end': 2945L,
          'selection_start': 2945L,
          'zoom': 0L},
         1602193129.686],
        [loc('libs/inara.py'),
         {'attrib-starts': [('scrape_commodity_data|0|',
                             170)],
          'code-line': '    __commodity_name__ = commodities.commodities_by_'\
                       'value.get(commodity_refid, None)\r\n',
          'first-line': 168L,
          'folded-linenos': [],
          'sel-line': 188L,
          'sel-line-start': 6929L,
          'selection_end': 7015L,
          'selection_start': 6929L,
          'zoom': 0L},
         1602193157.562],
        [loc('main.py'),
         {'attrib-starts': [],
          'code-line': "                __commodity_name__ = commodities.com"\
                       "modities_by_value.get(item, 'UNKNWON-COMMODITY')\r\n",
          'first-line': 46L,
          'folded-linenos': [],
          'sel-line': 76L,
          'sel-line-start': 2947L,
          'selection_end': 3047L,
          'selection_start': 3047L,
          'zoom': 0L},
         1602193192.471],
        [loc('libs/inara.py'),
         {'attrib-starts': [('scrape_commodity_data|0|',
                             170)],
          'code-line': "    the_headers, buymin_results = fetch_data_from(co"\
                       "mmodities_buymin_url, dirname=dirname, filename='com"\
                       "modity_{}_buymin.csv'.format(__commodity_name__), is"\
                       "_verbose=False, is_debugging=False, filter_keys_for_"\
                       "callback=__special_cols__, callback=special_column_f"\
                       "ilter)\r\n",
          'first-line': 390L,
          'folded-linenos': [],
          'sel-line': 417L,
          'sel-line-start': 17874L,
          'selection_end': 18026L,
          'selection_start': 17974L,
          'zoom': 0L},
         1602193220.334],
        [loc('main.py'),
         {'attrib-starts': [('wait_for_output|0|',
                             51)],
          'code-line': "                            sys.stdout('{}\\n'.forma"\
                       "t(msg))\r\n",
          'first-line': 43L,
          'folded-linenos': [],
          'sel-line': 56L,
          'sel-line-start': 1773L,
          'selection_end': 1829L,
          'selection_start': 1829L,
          'zoom': 0L},
         1602194669.669],
        [loc('libs/inara.py'),
         {'attrib-starts': [('scrape_commodity_data|0|',
                             170)],
          'code-line': '        isnan_sellmax_price = math.isnan(sellmax_pri'\
                       'ce)\r\n',
          'first-line': 420L,
          'folded-linenos': [],
          'sel-line': 450L,
          'sel-line-start': 20170L,
          'selection_end': 20225L,
          'selection_start': 20200L,
          'zoom': 0L},
         1602195236.713],
        [loc('libs/inara.py'),
         {'attrib-starts': [('scrape_commodity_data|0|',
                             170)],
          'code-line': '        if (not isnan_sellmax_price) and (not math.i'\
                       'snan(buymin_price)) and (int(sellmax_price / buymin_'\
                       'price) > 5):\r\n',
          'first-line': 420L,
          'folded-linenos': [],
          'sel-line': 452L,
          'sel-line-start': 20282L,
          'selection_end': 20317L,
          'selection_start': 20317L,
          'zoom': 0L},
         1602195247.775],
        [loc('libs/inara.py'),
         {'attrib-starts': [('scrape_commodity_data|0|',
                             170)],
          'code-line': '        elif (isnan_sellmax_price) or (math.isnan(bu'\
                       'ymin_price)):\r\n',
          'first-line': 420L,
          'folded-linenos': [],
          'sel-line': 459L,
          'sel-line-start': 20865L,
          'selection_end': 20898L,
          'selection_start': 20898L,
          'zoom': 0L},
         1602195256.967],
        [loc('libs/inara.py'),
         {'attrib-starts': [('scrape_commodity_data|0|',
                             170)],
          'code-line': "                ffOut.write('WARNING: {}{}{}\\n'.for"\
                       "mat('Max sell price is NaN.' if (isnan_sellmax_price"\
                       ") else '', ' or ' if (math.isnan(sellmax_price) or m"\
                       "ath.isnan(buymin_price)) else ' and ' if (math.isnan"\
                       "(sellmax_price) and math.isnan(buymin_price)) else '"\
                       "', 'Min buy price is NaN.' if (math.isnan(buymin_pri"\
                       "ce)) else ''))\r\n",
          'first-line': 420L,
          'folded-linenos': [],
          'sel-line': 461L,
          'sel-line-start': 20977L,
          'selection_end': 21080L,
          'selection_start': 21080L,
          'zoom': 0L},
         1602195264.967],
        [loc('libs/inara.py'),
         {'attrib-starts': [('scrape_commodity_data|0|',
                             170)],
          'code-line': "                ffOut.write('WARNING: {}{}{}\\n'.for"\
                       "mat('Max sell price is NaN.' if (isnan_sellmax_price"\
                       ") else '', ' or ' if (isnan_sellmax_price or math.is"\
                       "nan(buymin_price)) else ' and ' if (math.isnan(sellm"\
                       "ax_price) and math.isnan(buymin_price)) else '', 'Mi"\
                       "n buy price is NaN.' if (math.isnan(buymin_price)) e"\
                       "lse ''))\r\n",
          'first-line': 420L,
          'folded-linenos': [],
          'sel-line': 461L,
          'sel-line-start': 20977L,
          'selection_end': 21121L,
          'selection_start': 21121L,
          'zoom': 0L},
         1602195272.17],
        [loc('libs/inara.py'),
         {'attrib-starts': [('scrape_commodity_data|0|',
                             170)],
          'code-line': '        isnan_buymin_price = math.isnan(buymin_price'\
                       ')\r\n',
          'first-line': 420L,
          'folded-linenos': [],
          'sel-line': 451L,
          'sel-line-start': 20227L,
          'selection_end': 20280L,
          'selection_start': 20256L,
          'zoom': 0L},
         1602195284.166],
        [loc('libs/inara.py'),
         {'attrib-starts': [('scrape_commodity_data|0|',
                             170)],
          'code-line': '        if (not isnan_sellmax_price) and (not math.i'\
                       'snan(buymin_price)) and (int(sellmax_price / buymin_'\
                       'price) > 5):\r\n',
          'first-line': 420L,
          'folded-linenos': [],
          'sel-line': 452L,
          'sel-line-start': 20282L,
          'selection_end': 20328L,
          'selection_start': 20328L,
          'zoom': 0L},
         1602195288.592],
        [loc('libs/inara.py'),
         {'attrib-starts': [('scrape_commodity_data|0|',
                             170)],
          'code-line': '        if (not isnan_sellmax_price) and (not isnan_'\
                       'buymin_price) and (int(sellmax_price / buymin_price)'\
                       ' > 5):\r\n',
          'first-line': 420L,
          'folded-linenos': [],
          'sel-line': 452L,
          'sel-line-start': 20282L,
          'selection_end': 20346L,
          'selection_start': 20346L,
          'zoom': 0L},
         1602195295.737],
        [loc('libs/inara.py'),
         {'attrib-starts': [('scrape_commodity_data|0|',
                             170)],
          'code-line': '        elif (isnan_sellmax_price) or (isnan_buymin_'\
                       'price):\r\n',
          'first-line': 420L,
          'folded-linenos': [],
          'sel-line': 459L,
          'sel-line-start': 20859L,
          'selection_end': 20916L,
          'selection_start': 20916L,
          'zoom': 0L},
         1602195302.354],
        [loc('libs/inara.py'),
         {'attrib-starts': [('scrape_commodity_data|0|',
                             170)],
          'code-line': "                ffOut.write('WARNING: {}{}{}\\n'.for"\
                       "mat('Max sell price is NaN.' if (isnan_sellmax_price"\
                       ") else '', ' or ' if (isnan_sellmax_price or isnan_b"\
                       "uymin_price) else ' and ' if (isnan_sellmax_price an"\
                       "d math.isnan(buymin_price)) else '', 'Min buy price "\
                       "is NaN.' if (math.isnan(buymin_price)) else ''))\r\n",
          'first-line': 420L,
          'folded-linenos': [],
          'sel-line': 461L,
          'sel-line-start': 20965L,
          'selection_end': 21131L,
          'selection_start': 21131L,
          'zoom': 0L},
         1602195309.386],
        [loc('libs/inara.py'),
         {'attrib-starts': [('scrape_commodity_data|0|',
                             170)],
          'code-line': "                ffOut.write('WARNING: {}{}{}\\n'.for"\
                       "mat('Max sell price is NaN.' if (isnan_sellmax_price"\
                       ") else '', ' or ' if (isnan_sellmax_price or isnan_b"\
                       "uymin_price) else ' and ' if (isnan_sellmax_price an"\
                       "d isnan_buymin_price) else '', 'Min buy price is NaN"\
                       ".' if (math.isnan(buymin_price)) else ''))\r\n",
          'first-line': 420L,
          'folded-linenos': [],
          'sel-line': 461L,
          'sel-line-start': 20965L,
          'selection_end': 21192L,
          'selection_start': 21192L,
          'zoom': 0L},
         1602195316.604]],
        20),
        'current-loc': loc('libs/inara.py'),
        'editor-state-list': [(loc('venv/Lib/site-packages/pandas/core/indexes/base.py'),
                               {'attrib-starts': [('Index|0|',
        189),
        ('Index|0|.get_loc|0|',
         2846)],
                                'code-line': '                raise KeyError'\
        '(key) from err\r\n',
                                'first-line': 2852L,
                                'folded-linenos': [],
                                'sel-line': 2892L,
                                'sel-line-start': 94332L,
                                'selection_end': 94332L,
                                'selection_start': 94332L,
                                'zoom': 0L}),
                              (loc('libs/commodities.py'),
                               {'attrib-starts': [],
                                'code-line': 'commodities_by_value = {}\r\n',
                                'first-line': 201L,
                                'folded-linenos': [],
                                'sel-line': 236L,
                                'sel-line-start': 5796L,
                                'selection_end': 5816L,
                                'selection_start': 5796L,
                                'zoom': 0L}),
                              (loc('../../../../../Python38/Lib/encodings/cp1252.py'),
                               {'attrib-starts': [('IncrementalEncoder|0|',
        16),
        ('IncrementalEncoder|0|.encode|0|',
         17)],
                                'code-line': '        return codecs.charmap_'\
        'encode(input,self.errors,encoding_table)[0]\n',
                                'first-line': 0L,
                                'folded-linenos': [],
                                'sel-line': 18L,
                                'sel-line-start': 504L,
                                'selection_end': 504L,
                                'selection_start': 504L,
                                'zoom': 0L}),
                              (loc('../../../../../Python38/Lib/csv.py'),
                               {'attrib-starts': [('DictWriter|0|',
        129),
        ('DictWriter|0|._dict_to_list|0|',
         144)],
                                'code-line': '                raise ValueErr'\
        'or("dict contains fields not in fieldnames: "\n',
                                'first-line': 108L,
                                'folded-linenos': [],
                                'sel-line': 148L,
                                'sel-line-start': 4653L,
                                'selection_end': 4653L,
                                'selection_start': 4653L,
                                'zoom': 0L}),
                              (loc('../chrome-gui/vyperlogix/enum/Enum.py'),
                               {'attrib-starts': [('EnumMetaClass|0|',
        31)],
                                'code-line': 'class EnumMetaClass(type):\r\n',
                                'first-line': 197L,
                                'folded-linenos': [],
                                'sel-line': 31L,
                                'sel-line-start': 1113L,
                                'selection_end': 1139L,
                                'selection_start': 1139L,
                                'zoom': 0L}),
                              (loc('venv/Lib/site-packages/pandas/core/frame.py'),
                               {'attrib-starts': [('DataFrame|0|',
        339),
        ('DataFrame|0|.__getitem__|0|',
         2868)],
                                'code-line': '            indexer = self.loc'\
        '._get_listlike_indexer(key, axis=1, raise_missing=True)[1]\r\n',
                                'first-line': 2858L,
                                'folded-linenos': [],
                                'sel-line': 2907L,
                                'sel-line-start': 105449L,
                                'selection_end': 105449L,
                                'selection_start': 105449L,
                                'zoom': 0L}),
                              (loc('../../../../../Program Files (x86)/Wing Pro 7.2/doc/TOC'),
                               {'displayed-index': 35,
                                'viewer-state': {'history': [-1,
        35],
        'history-pos': 1,
        'index': 35,
        'top': 0,
        'top-left-pos': 0}}),
                              (loc('libs/inara.py'),
                               {'attrib-starts': [('scrape_commodity_data|0|',
        170)],
                                'code-line': "                ffOut.write('W"\
        "ARNING: {}{}{}\\n'.format('Max sell price is NaN.' if (isnan_sellma"\
        "x_price) else '', ' or ' if (isnan_sellmax_price or isnan_buymin_pr"\
        "ice) else ' and ' if (isnan_sellmax_price and isnan_buymin_price) e"\
        "lse '', 'Min buy price is NaN.' if (isnan_buymin_price) else ''))\r"\
        "\n",
                                'first-line': 420L,
                                'folded-linenos': [],
                                'sel-line': 461L,
                                'sel-line-start': 20965L,
                                'selection_end': 21249L,
                                'selection_start': 21249L,
                                'zoom': 0L}),
                              (loc('venv/Lib/site-packages/pandas/core/indexing.py'),
                               {'attrib-starts': [('_LocIndexer|0|',
        901),
        ('_LocIndexer|0|._get_listlike_indexer|0|',
         1207)],
                                'code-line': '        self._validate_read_in'\
        'dexer(keyarr, indexer, axis, raise_missing=raise_missing)\r\n',
                                'first-line': 1248L,
                                'folded-linenos': [],
                                'sel-line': 1253L,
                                'sel-line-start': 41188L,
                                'selection_end': 41188L,
                                'selection_start': 41188L,
                                'zoom': 0L}),
                              (loc('libs/__init__.py'),
                               {'attrib-starts': [],
                                'code-line': '',
                                'first-line': 0L,
                                'folded-linenos': [],
                                'sel-line': 0L,
                                'sel-line-start': 0L,
                                'selection_end': 0L,
                                'selection_start': 0L,
                                'zoom': 0L}),
                              (loc('main.py'),
                               {'attrib-starts': [('wait_for_output|0|',
        51)],
                                'code-line': "                            sy"\
        "s.stdout('{}\\n'.format(msg))\r\n",
                                'first-line': 43L,
                                'folded-linenos': [],
                                'sel-line': 56L,
                                'sel-line-start': 1773L,
                                'selection_end': 1829L,
                                'selection_start': 1829L,
                                'zoom': 0L}),
                              (loc('quickstart.py'),
                               {'attrib-starts': [('main|0|',
        10)],
                                'code-line': "        with open('token.pickl"\
        "e', 'wb') as token:\r\n",
                                'first-line': 0L,
                                'folded-linenos': [],
                                'sel-line': 30L,
                                'sel-line-start': 1261L,
                                'selection_end': 1292L,
                                'selection_start': 1280L,
                                'zoom': 0L}),
                              (loc('../chrome-gui/vyperlogix/enum/SimpleEnum.py'),
                               {'attrib-starts': [('Enum|0|',
        0)],
                                'code-line': 'class Enum:\r\n',
                                'first-line': 0L,
                                'folded-linenos': [],
                                'sel-line': 0L,
                                'sel-line-start': 0L,
                                'selection_end': 0L,
                                'selection_start': 0L,
                                'zoom': 0L}),
                              (loc('../chrome-gui/vyperlogix/misc/_utils.py'),
                               {'attrib-starts': [],
                                'code-line': '\r\n',
                                'first-line': 109L,
                                'folded-linenos': [],
                                'sel-line': 128L,
                                'sel-line-start': 4384L,
                                'selection_end': 4384L,
                                'selection_start': 4384L,
                                'zoom': 0L})],
        'has-focus': True,
        'locked': False},
        [loc('venv/Lib/site-packages/pandas/core/indexes/base.py'),
         loc('libs/commodities.py'),
         loc('../../../../../Python38/Lib/encodings/cp1252.py'),
         loc('../../../../../Python38/Lib/csv.py'),
         loc('../chrome-gui/vyperlogix/enum/Enum.py'),
         loc('venv/Lib/site-packages/pandas/core/frame.py'),
         loc('../../../../../Program Files (x86)/Wing Pro 7.2/doc/TOC'),
         loc('libs/inara.py'),
         loc('venv/Lib/site-packages/pandas/core/indexing.py'),
         loc('libs/__init__.py'),
         loc('main.py'),
         loc('quickstart.py'),
         loc('../chrome-gui/vyperlogix/enum/SimpleEnum.py'),
         loc('../chrome-gui/vyperlogix/misc/_utils.py')]),
                               'open_files': [u'../../../../../Program Files (x86)/Wing Pro 7.2/doc/TOC',
        u'../../../../../Python38/Lib/csv.py',
        u'../../../../../Python38/Lib/encodings/cp1252.py',
        u'../chrome-gui/vyperlogix/enum/Enum.py',
        u'../chrome-gui/vyperlogix/enum/SimpleEnum.py',
        u'../chrome-gui/vyperlogix/misc/_utils.py',
        u'libs/__init__.py',
        u'libs/commodities.py',
        u'quickstart.py',
        u'venv/Lib/site-packages/pandas/core/indexes/base.py',
        u'main.py',
        u'libs/inara.py']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.5},
        'splits': 2,
        'tab_location': 'top',
        'traversal_pos': ((0,
                           1),
                          1602195284.161),
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {0: 0.5},
                 'splits': 2,
                 'tab_location': 'left',
                 'traversal_pos': ((1,
                                    0),
                                   1601662837.501),
                 'user_data': {}},
        'window-alloc': (62,
                         204,
                         1918,
                         1088)}]}
guimgr.recent-documents = [loc('libs/inara.py'),
                           loc('main.py'),
                           loc('venv/Lib/site-packages/pandas/core/indexing.py'),
                           loc('venv/Lib/site-packages/pandas/core/frame.py'),
                           loc('venv/Lib/site-packages/pandas/core/indexes/base.py'),
                           loc('quickstart.py'),
                           loc('../chrome-gui/vyperlogix/misc/_utils.py'),
                           loc('libs/commodities.py'),
                           loc('libs/__init__.py')]
guimgr.visual-state = {loc('../chrome-gui/vyperlogix/enum/__init__.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '__copyright__ = """\\\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../chrome-gui/vyperlogix/gds/util.py'): {'attrib'\
        '-starts': [('SpellCheck|0|',
                     109)],
        'code-line': '    misspelled = []\r\n',
        'first-line': 92L,
        'folded-linenos': [],
        'sel-line': 119L,
        'sel-line-start': 4482L,
        'selection_end': 4500L,
        'selection_start': 4497L,
        'zoom': 0L},
                       loc('../chrome-gui/vyperlogix/iterators/dict/dictutils.py'): {'a'\
        'ttrib-starts': [('flatten|0|',
                          31)],
        'code-line': '    items = []\r\n',
        'first-line': 8L,
        'folded-linenos': [],
        'sel-line': 35L,
        'sel-line-start': 1241L,
        'selection_end': 1254L,
        'selection_start': 1251L,
        'zoom': 0L},
                       loc('../chrome-gui/vyperlogix/misc/sortedDictionary.py'): {'a'\
        'ttrib-starts': [('sortedDictValues|0|',
                          1)],
        'code-line': '    return [value for key, value in items]\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 4L,
        'sel-line-start': 108L,
        'selection_end': 123L,
        'selection_start': 119L,
        'zoom': 0L},
                       loc('libs/commodities.py'): {'attrib-starts': [],
        'code-line': "is_normalized_key = lambda key:(not str(key).startswit"\
                     "h('__')) and (not str(key).endswith('__'))all_commodit"\
                     "ies = [k for k in Commodities.__dict__.keys() if (is_n"\
                     "ormalized_key(k))]commodities = dict([tuple([k,v]) for"\
                     " k,v in Commodities.__dict__.items() if (is_normalized"\
                     "_key(k))])",
        'first-line': 189L,
        'folded-linenos': [],
        'sel-line': 232L,
        'sel-line-start': 5486L,
        'selection_end': 5703L,
        'selection_start': 5703L,
        'zoom': 0L},
                       loc('venv/Lib/site-packages/bs4/element.py'): {'attri'\
        'b-starts': [],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L}}
proj.build-cmd = {None: ('default',
                         None)}
proj.env-vars = {None: ('default',
                        [u''])}
proj.ptype = 'virtualenv'
proj.pyexec = {None: ('activate',
                      'C:\\Users\\Owner\\OneDrive\\Python39\\inara_cz\\venv'\
                      '\\Scripts\\activate.bat')}
proj.pypath = {None: ('custom',
                      [u'c:\\Users\\Owner\\OneDrive\\Python39\\inara_cz\\libs',
                       u'c:\\Users\\Owner\\OneDrive\\Python39\\chrome-gui'])}
proj.vcs-system-config = ('prefs',
                          {'bzr': {'versioncontrol.bzr.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.bzr.executable': u'bzr'},
                           'cvs': {'versioncontrol.cvs.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.cvs.executable': u'cvs',
                                   'versioncontrol.cvs.extra-global-args': '-'\
        'z3'},
                           'git': {'versioncontrol.git.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.git.executable': u'git',
                                   'versioncontrol.git.use-porcelain': True},
                           'hg': {'versioncontrol.hg.active': 'active-if-pro'\
        'ject-dir',
                                  'versioncontrol.hg.dont-find-unregistered': True,
                                  'versioncontrol.hg.executable': u'hg',
                                  'versioncontrol.hg.extra-global-args': '--'\
        'encoding=utf8'},
                           'perforce': {'versioncontrol.perforce.active': 'n'\
        'ot-active',
        'versioncontrol.perforce.dont-find-unregistered': True,
        'versioncontrol.perforce.executable': u'p4',
        'versioncontrol.perforce.extra-global-args': ''},
                           'svn': {'versioncontrol.svn.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.svn.executable': u'svn',
                                   'versioncontrol.svn.extra-global-args': '',
                                   'versioncontrol.svn.svnadmin-executable': u'svnadmin'}})
search.search-history = [u'math.isnan(buymin_price)',
                         u'math.isnan(sellmax_price)',
                         u'write_output(',
                         u'except Exception',
                         u'[',
                         u'target_cols',
                         u'fetch_data_from',
                         u'special_column_filter',
                         u'__special_cols__',
                         u'(value',
                         u"'Buy price', 'Sell price', 'QTY', 'St dist', 'Distance'",
                         u'special_cols',
                         u'buymin_locations',
                         u'.tolower(',
                         u'import os',
                         u'is_verbose',
                         u'scrape_commodity_data(',
                         u'./data',
                         u'tritium',
                         u'print(']
search.search-scope-history = [loc('../chrome-gui/vyperlogix')]
testing.stored-results = (1,
                          [],
                          {})
